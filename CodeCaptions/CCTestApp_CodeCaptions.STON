CodeCaptionProject {	#name : 'CCTestApp',	#codeCaptions : Set [		CodeCaptionComment {			#id : 989258496,			#repository : 'IceLibgitRepository(CCTestApp)',			#package : RPackage {				#classDefinedSelectors : {					#Role : Set [						#name,						#'name:'					],					#Project : Set [						#'tasks:',						#name,						#computeTheTotalCompletionPercentageOfTheProjectTasks,						#'positions:',						#'name:',						#initialize,						#positions,						#tasks,						#'completionPercentage:',						#completionPercentage					],					#Task : Set [						#'name:',						#'employees:',						#initialize,						#employees,						#'completed:',						#name,						#completed					],					#Position : Set [						#'role:',						#person,						#'person:',						#role					],					#Person : Set [						#name,						#'name:'					],					#Employee : Set [						#initialize,						#'leader:',						#'doTask:',						#leader					],					#Leader : Set [						#'addEmployee:',						#'employees:',						#employees,						#initialize,						#'assignTask:toEmployee:',						#'task:hasEmployee:'					]				},				#metaclassDefinedSelectors : {					#Task : Set [						#'newWithName:'					],					#Position : Set [						#'newWithPerson:role:'					]				},				#classExtensionSelectors : { },				#metaclassExtensionSelectors : { },				#classes : Set [					#Role,					#Project,					#Task,					#Position,					#Person,					#ManifestCCTestApp,					#Employee,					#Leader				],				#name : #CCTestApp,				#classTags : Set [					RPackageTag {						#package : @4,						#name : #Manifest,						#classNames : Set [							#ManifestCCTestApp						]					},					RPackageTag {						#package : @4,						#name : #Project,						#classNames : Set [							#Role,							#Project,							#Task,							#Position,							#Person,							#Employee,							#Leader						]					}				]			},			#captionNode : CodeCaptionSource {				#methodNode : 'RBMethodNode selector: #assignTask:toEmployee: arguments: {RBVariableNode named: #aTask. RBVariableNode named: #anEmployee. } body: (RBSequenceNode statements: {RBMessageNode receiver: (RBMessageNode receiver: (RBMessageNode receiver: (RBMessageNode receiver: (RBVariableNode named: #anEmployee) selector: #class) selector: #name) selector: #= arguments: {RBLiteralValueNode value: \'Leader\'. }) selector: #ifTrue: arguments: {RBBlockNode body: (RBSequenceNode statements: {RBReturnNode value: (RBLiteralValueNode value: false). }). }. RBMessageNode receiver: (RBMessageNode receiver: (RBVariableNode named: #aTask) selector: #employees) selector: #add: arguments: {RBVariableNode named: #anEmployee. }. })',				#node : 'RBMessageNode receiver: (RBMessageNode receiver: (RBMessageNode receiver: (RBMessageNode receiver: (RBVariableNode named: #anEmployee) selector: #class) selector: #name) selector: #= arguments: {RBLiteralValueNode value: \'Leader\'. }) selector: #ifTrue: arguments: {RBBlockNode body: (RBSequenceNode statements: {RBReturnNode value: (RBLiteralValueNode value: false). }). }',				#nodeClass : Class [ #Leader ]			},			#nodeFound : true,			#comment : 'No preguntar por el nombre de la clase',			#author : 'TestReviewer'		}	],	#packages : Set [		@4	],	#gitDirectory : 'pharo-local/iceberg/nahux/CCTestApp'}